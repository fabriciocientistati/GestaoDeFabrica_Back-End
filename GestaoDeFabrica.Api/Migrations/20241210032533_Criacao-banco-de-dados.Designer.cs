// <auto-generated />
using System;
using FabricaGestao.Api.Dados.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FabricaGestao.Api.Migrations
{
    [DbContext(typeof(ContextoDados))]
    [Migration("20241210032533_Criacao-banco-de-dados")]
    partial class Criacaobancodedados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.CategoriaModel", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatId"));

                    b.Property<DateTime?>("CatAltEm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CatAltPor")
                        .HasColumnType("int");

                    b.Property<DateTime>("CatIncEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("CatIncPor")
                        .HasColumnType("int");

                    b.Property<string>("CatNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatId");

                    b.ToTable("TBCategorias");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.OrcamentoModel", b =>
                {
                    b.Property<int>("OrcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrcId"));

                    b.Property<DateTime?>("OrcAltEm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrcAltPor")
                        .HasColumnType("int");

                    b.Property<string>("OrcDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrcIncEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrcIncPor")
                        .HasColumnType("int");

                    b.Property<string>("OrcObservacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrcPreco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrcTipoEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrcTipoPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PesId")
                        .HasColumnType("int");

                    b.HasKey("OrcId");

                    b.HasIndex("PesId");

                    b.ToTable("TBOrcamentos");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.OrcamentoProdutoModel", b =>
                {
                    b.Property<int>("OrcId")
                        .HasColumnType("int");

                    b.Property<int>("ProId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("OrcId", "ProId");

                    b.HasIndex("ProId");

                    b.ToTable("TBOrcamentoProdutos");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.PessoaModel", b =>
                {
                    b.Property<int>("PesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PesId"));

                    b.Property<DateTime?>("PesAltEm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PesAltPor")
                        .HasColumnType("int");

                    b.Property<string>("PesBairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesCep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesCidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PesIncEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("PesIncPor")
                        .HasColumnType("int");

                    b.Property<string>("PesNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesNumCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesNumTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesRua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PesId");

                    b.ToTable("TBPessoas");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.ProdutoModel", b =>
                {
                    b.Property<int>("ProId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProId"));

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProAltEm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProAltPor")
                        .HasColumnType("int");

                    b.Property<string>("ProDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProImagemUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProIncEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProIncPor")
                        .HasColumnType("int");

                    b.Property<string>("ProNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProPreco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProQuantidadeEmEstoque")
                        .HasColumnType("int");

                    b.HasKey("ProId");

                    b.HasIndex("CatId");

                    b.ToTable("TBProdutos");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.OrcamentoModel", b =>
                {
                    b.HasOne("GestaoDeFabrica.Api.Modelos.PessoaModel", "Pessoa")
                        .WithMany("Orcamentos")
                        .HasForeignKey("PesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.OrcamentoProdutoModel", b =>
                {
                    b.HasOne("GestaoDeFabrica.Api.Modelos.OrcamentoModel", "Orcamento")
                        .WithMany("OrcamentoProdutos")
                        .HasForeignKey("OrcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoDeFabrica.Api.Modelos.ProdutoModel", "Produto")
                        .WithMany("ProdutoOrcamentos")
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orcamento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.ProdutoModel", b =>
                {
                    b.HasOne("GestaoDeFabrica.Api.Modelos.CategoriaModel", "Categoria")
                        .WithMany("CategoriaProdutos")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.CategoriaModel", b =>
                {
                    b.Navigation("CategoriaProdutos");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.OrcamentoModel", b =>
                {
                    b.Navigation("OrcamentoProdutos");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.PessoaModel", b =>
                {
                    b.Navigation("Orcamentos");
                });

            modelBuilder.Entity("GestaoDeFabrica.Api.Modelos.ProdutoModel", b =>
                {
                    b.Navigation("ProdutoOrcamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
